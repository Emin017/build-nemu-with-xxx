cmake_minimum_required (VERSION 3.20)

project (NEMU)

if(DEFINED ENV{CFLAGS})
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} $ENV{CFLAGS}")
endif()

add_compile_options(-Wall -DITRACE_COND=false)

include_directories(./include ./src/monitor/sdb)

aux_source_directory("./src" MAIN_SRC_LIST )
aux_source_directory("./src/cpu" CPU_SRC_LIST )
aux_source_directory("./src/cpu/difftest" CPU_DIFF_SRC_LIST )
aux_source_directory("./src/monitor" MONITOR_SRC_LIST )
aux_source_directory("./src/monitor/sdb" SDB_SRC_LIST )
aux_source_directory("./src/utils" UTILS_SRC_LIST)
aux_source_directory("./src/engine/interpreter" ENGINE_SRC_LIST)
aux_source_directory("./src/memory" MEM_SRC_LIST)

if(RV32)
add_compile_options(-D__GUEST_ISA__=riscv32)
include_directories( ./src/isa/riscv32/include ./src/isa/riscv32/local-include)
aux_source_directory("./src/isa/riscv32" RV32_SRC_LIST)
aux_source_directory("./src/isa/riscv32/system" RV32_SYS_SRC_LIST)
aux_source_directory("./src/isa/riscv32/difftest" RV32_DIFF_SRC_LIST)
elseif(RV64)
add_compile_options(-D__GUEST_ISA__=riscv64)
include_directories( ./src/isa/riscv64/include ./src/isa/riscv64/local-include)
aux_source_directory("./src/isa/riscv64" RV64_SRC_LIST)
aux_source_directory("./src/isa/riscv64/system" RV64_SYS_SRC_LIST)
aux_source_directory("./src/isa/riscv64/difftest" RV64_DIFF_SRC_LIST)
elseif(LOONGARCH32R)
add_compile_options(-D__GUEST_ISA__=loongarch32r)
include_directories( ./src/isa/loongarch32r/include ./src/isa/loongarch32r/local-include)
aux_source_directory("./src/isa/loongarch32r" LOONGARCH32R_SRC_LIST)
aux_source_directory("./src/isa/loongarch32r/system" LOONGARCH32R_SYS_SRC_LIST)
aux_source_directory("./src/isa/loongarch32r/difftest" LOONGARCH32R_DIFF_SRC_LIST)
elseif(MIPS32)
add_compile_options(-D__GUEST_ISA__=mips32)
include_directories( ./src/isa/mips32/include ./src/isa/mips32/local-include)
aux_source_directory("./src/isa/mips32" MIPS_SRC_LIST)
aux_source_directory("./src/isa/mips32/system" MIPS_SYS_SRC_LIST)
aux_source_directory("./src/isa/mips32/difftest" MIPS_DIFF_SRC_LIST)
endif()

if(RV32)
add_executable(riscv32-nemu ${MAIN_SRC_LIST} ${RV32_SRC_LIST} ${CPU_SRC_LIST} ${CPU_DIFF_SRC_LIST} ${MONITOR_SRC_LIST} ${SDB_SRC_LIST} ${UTILS_SRC_LIST} ${ENGINE_SRC_LIST} ${MEM_SRC_LIST})
target_link_libraries(riscv32-nemu readline)
elseif(RV64)
add_executable(riscv32-nemu ${MAIN_SRC_LIST} ${RV64_SRC_LIST} ${CPU_SRC_LIST} ${CPU_DIFF_SRC_LIST} ${MONITOR_SRC_LIST} ${SDB_SRC_LIST} ${UTILS_SRC_LIST} ${ENGINE_SRC_LIST} ${MEM_SRC_LIST})
target_link_libraries(riscv32-nemu readline)
elseif(LOONGARCH32R)
add_executable(loongarch32r-nemu ${MAIN_SRC_LIST} ${LOONGARCH32R_SRC_LIST} ${CPU_SRC_LIST} ${CPU_DIFF_SRC_LIST} ${MONITOR_SRC_LIST} ${SDB_SRC_LIST} ${UTILS_SRC_LIST} ${ENGINE_SRC_LIST} ${MEM_SRC_LIST})
target_link_libraries(loongarch32r-nemu readline)
elseif(MIPS32)
add_executable(mips32-nemu ${MAIN_SRC_LIST} ${MIPS_SRC_LIST} ${CPU_SRC_LIST} ${CPU_DIFF_SRC_LIST} ${MONITOR_SRC_LIST} ${SDB_SRC_LIST} ${UTILS_SRC_LIST} ${ENGINE_SRC_LIST} ${MEM_SRC_LIST})
target_link_libraries(mips32-nemu readline)
endif()

